import type { Authorization } from '../types';
export declare type LogInFromServiceInput = Readonly<{
    input: Readonly<{
        sid: string;
        secret: string;
    }>;
}>;
export declare type LogInFromServiceResult = Authorization;
declare const logInFromServiceImpl: (axiosInstance: Readonly<{
    post: <T = any, R = import("axios").AxiosResponse<T, any>, D = any>(url: string, data?: D | undefined, config?: import("axios").AxiosRequestConfig<D> | undefined) => Promise<R>;
}>, variables: Readonly<{
    input: Readonly<{
        sid: string;
        secret: string;
    }>;
}>) => Promise<Readonly<{
    token: string;
    expiry: string;
}>>;
export default logInFromServiceImpl;
//# sourceMappingURL=logInFromServiceImpl.d.ts.map