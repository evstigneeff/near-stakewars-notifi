import type { WalletBlockchain } from '../types';
export declare type SendMessageInput = Readonly<{
    input: Readonly<{
        walletPublicKey: string;
        walletBlockchain: WalletBlockchain;
        messageKey: string;
        message: string;
        messageType: 'SIMPLE_HEALTH_THRESHOLD' | 'DIRECT_TENANT_MESSAGE';
    }>;
}>;
export declare type SendMessageResult = boolean;
declare const sendMessageImpl: (axiosInstance: Readonly<{
    post: <T = any, R = import("axios").AxiosResponse<T, any>, D = any>(url: string, data?: D | undefined, config?: import("axios").AxiosRequestConfig<D> | undefined) => Promise<R>;
}>, jwt: string, variables: Readonly<{
    input: Readonly<{
        walletPublicKey: string;
        walletBlockchain: WalletBlockchain;
        messageKey: string;
        message: string;
        messageType: 'SIMPLE_HEALTH_THRESHOLD' | 'DIRECT_TENANT_MESSAGE';
    }>;
}>) => Promise<boolean>;
export default sendMessageImpl;
//# sourceMappingURL=sendMessageImpl.d.ts.map