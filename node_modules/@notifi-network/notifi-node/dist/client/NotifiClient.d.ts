import { BroadcastMessageInput } from '../mutations/broadcastMessageImpl';
import { GetTenantConnectedWalletInput, GetTenantConnectedWalletResult } from '../queries/getTenantConnectedWalletImpl';
import type { Authorization, ManagedAlert, SimpleHealthThresholdMessagePayload, WalletBlockchain } from '../types';
import type { AxiosPost } from '@notifi-network/notifi-axios-utils';
declare class NotifiClient {
    private a;
    constructor(a: AxiosPost);
    logIn: (params: Readonly<{
        sid: string;
        secret: string;
    }>) => Promise<Authorization>;
    sendSimpleHealthThreshold: (jwt: string, params: Readonly<{
        key: string;
        walletPublicKey: string;
        walletBlockchain: WalletBlockchain;
    }> & SimpleHealthThresholdMessagePayload) => Promise<void>;
    sendBroadcastMessage: (jwt: string, params: BroadcastMessageInput) => Promise<void>;
    sendDirectPush: (jwt: string, params: Readonly<{
        key: string;
        walletPublicKey: string;
        walletBlockchain: WalletBlockchain;
        message?: string;
        type?: string;
        template?: {
            emailTemplate?: string;
            smsTemplate?: string;
            telegramTemplate?: string;
            variables: Record<string, string>;
        };
    }>) => Promise<void>;
    deleteUserAlert: (jwt: string, params: Readonly<{
        alertId: string;
    }>) => Promise<string>;
    createTenantUser: (jwt: string, params: Readonly<{
        walletBlockchain: WalletBlockchain;
        walletPublicKey: string;
    }>) => Promise<string>;
    createDirectPushAlert: (jwt: string, params: Readonly<{
        userId: string;
        emailAddresses?: ReadonlyArray<string>;
        phoneNumbers?: ReadonlyArray<string>;
        telegramIds?: ReadonlyArray<string>;
    }>) => Promise<ManagedAlert>;
    deleteDirectPushAlert: (jwt: string, params: Readonly<{
        alertId: string;
    }>) => Promise<ManagedAlert>;
    getTenantConnectedWallet: (jwt: string, params: GetTenantConnectedWalletInput) => Promise<GetTenantConnectedWalletResult>;
}
export default NotifiClient;
//# sourceMappingURL=NotifiClient.d.ts.map